#!/usr/bin/perl -w
# $Id: $
#
use strict;
use Getopt::Std;

#------------------------------------------------------------------------------
# 
# Generates a file for gnuplot with four columns:
#   index log2prob-file0 log2prob-file1 (cdcgic..)
#   0 -2.98053 -2.98051 cgcg
#   1 -8.3812 -8.3812 cdcd
#
# test/asr:
# perl ../../etc/create_px_scatterplot.pl -f en-es.es.t1000.l3r0_IGTREE.px -F en-es.es.t1000.l3r1_IGTREE.px -l3 -r0 -L3 -R1 -o px_ig_l3r0_vs_ig_l3r1
# gnuplot px_ig_l3r0_vs_ig_l3r1.plot
#
#------------------------------------------------------------------------------

use vars qw/ $opt_f $opt_F $opt_l $opt_L $opt_r $opt_R $opt_o $opt_i /;

getopts('f:F:l:L:r:R:o:i:');

my $file0 = $opt_f || 0;
my $file1 = $opt_F || 0;

my $lc0   = $opt_l || 0;
my $lc1   = $opt_L || 0;
my $rc0   = $opt_r || 0;
my $rc1   = $opt_R || 0;

my $out   = $opt_o || 0;

my $idx   = $opt_i || 2; # index to variable to plot

#------------------------------------------------------------------------------

# Put the cg/ic/... in a column

my $gcs = 0;
my $cdi = 3; #correct/dist/incorrect

# Here we can plot adc etc as well.
#
my $l2p_pos0 = $lc0 + $rc0 + $gcs + $idx;
my $l2p_pos1 = $lc1 + $rc1 + $gcs + $idx;
my $cdi_pos0 = $lc0 + $rc0 + $cdi + $idx;
my $cdi_pos1 = $lc1 + $rc1 + $cdi + $idx;

my $out_data = $out.".data";
my $out_plot = $out.".plot";
# $out.ps and $out.pdf generated by script

# Data file first
#
open(FHF0, $file0)  || die "Can't open file.";
open(FHF1, $file1)  || die "Can't open file.";
open(OFHD, ">$out_data") || die "Can't open datafile.";

print OFHD "# $file0\n";
print OFHD "# $file1\n";

my $cnt = 0;
while ( my $line0 = get_next(*FHF0) ) {

  my $l2p0;
  my $l2p1;
  my $cdi0;
  my $cdi1;
  my @parts0;
  my @parts1;


  if ( my $line1 = get_next(*FHF1) ) {

    chomp $line0;
    chomp $line1;

    @parts0 = split ( / /, $line0 );
    $l2p0 = $parts0[$l2p_pos0];
    $cdi0 = $parts0[$cdi_pos0];

    @parts1 = split ( / /, $line1 );
    $l2p1 = $parts1[$l2p_pos1];
    $cdi1 = $parts1[$cdi_pos1];

    print OFHD "$cnt $l2p0 $l2p1 $cdi0$cdi1\n";
    ++$cnt;
    
  }
}

close(OFHD);
close(FHF1);
close(FHF0);

# Gnuplot file
#
open(OFHP, ">$out_plot") || die "Can't open plotfile.";

my $rng = "";
if ( $idx == 9 ) {
  $rng = "0:5000";
}

# format for the dots/points
# use pointsize 0 to make temporarily invisible
my $dot0 = "with points pointtype 7 pointsize 0.5";
my $dot1 = "with points pointtype 7 pointsize 0.5";
my $dot2 = "with points pointtype 7 pointsize 0";
# labels
my $t0 = "correct guess";
my $t1 = "correct distr";
my $t2 = ""; #"incorrect";

print OFHP "# $file0\n";
print OFHP "# $file1\n";
print OFHP "set xrange [$rng]\n";
print OFHP "set yrange [$rng]\n";
print OFHP "set xlabel '$file0'\n";
print OFHP "set ylabel '$file1'\n";
print OFHP "set key bottom\n";
print OFHP "set grid\n";
print OFHP "plot \"<grep ' cg' $out_data\" using 2:3 $dot0 t \"$t0\",\\\n";
print OFHP "\"<grep ' cd' $out_data\" using 2:3 $dot1 t \"$t1\",\\\n";
print OFHP "\"<grep ' ic' $out_data\" using 2:3 $dot2 t \"$t2\"\n";
print OFHP "set terminal push\n";
print OFHP "set terminal postscript eps color lw 2 \"Helvetica\" 10\n";
print OFHP "set out \"$out.ps\"\n";
print OFHP "replot\n";
print OFHP "!epstopdf '".$out.".ps'\n";
print OFHP "set term pop\n";

close(OFHP);

# ----

sub get_next {
 my $h = shift;
 while ( my $line = <$h> ) {
   if ( substr($line, 0, 1) eq "#" ) {
     return get_next($h);
   }
   chomp $line;
   return $line;
 }
 return 0;
}

sub log2 {
  my $l    = shift;

  if ( $l == 0 ) {
    return 0;
  }
  return log($l)/log(2);
}

sub log10 {
  my $l    = shift;

  if ( $l == 0 ) {
    return 0;
  }
  return log($l)/log(10);
}

sub log2tolog10 {
  my $l    = shift;
  my $e    = 2.718281828;
  my $log2 = 0.3010299957;

  return $l * $log2;
}

__END__


my $plot_file = $ws_file.".plot";
open(OFHD, ">$plot_file")  || die "Can't open outfile.";
print OFHD "set title \"scatter\"\n";
print OFHD "set xlabel \"frequency\"\n";
print OFHD "set logscale x\n";
print OFHD "set key bottom\n";
print OFHD "set ylabel \"cg\"\n";
print OFHD "set grid\n";
#plot [10000:][] "< awk '{if (($2 >= 50) || ($5 >80000)) print $0;}' nyt.tail1000.l3r3_ALG7015.px.ws.data" using 5:2:1 with labels, "nyt.tail1000.l3r3_ALG7015.px.ws.data" using 5:2
print OFHD "plot [][] \"".$data_file."\" using 5:2\n";
print OFHD "set terminal push\n";
print OFHD "set terminal postscript eps enhanced color solid rounded lw 2 'Helvetica' 10\n";
print OFHD "set out '".$ws_file.".ps'\n";
print OFHD "replot\n";
print OFHD "!epstopdf '".$ws_file.".ps'\n";
print OFHD "set term pop\n";

close(OFHD);


ws file:
with: cg:18 (15.25%) cd:73 (61.86%) ic:27 (22.88%)

set title "scatter"
set xlabel "frequency"
set logscale x
set key bottom
set ylabel "cg"
set grid
plot [][] "foo.data" using 5:2
set terminal push
set terminal postscript eps enhanced color solid rounded lw 2 'Helvetica' 10
set out 'NY_pplx_-a4+D.ps'
replot
!epstopdf 'NY_pplx_-a4+D.ps'
set term pop


foo.data:
Chinese 66.67 33.33 0.00 226
